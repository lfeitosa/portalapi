openapi: 3.0.0
info:
  title: API Becommerce - Produtos
  description: Api oficial da Becommerce para gestão de produtos
  version: "1.0.0"
  
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/becommerce/api-becommerce_produtos/1.0.0
  - url: http://api.becommerce.com.br/v1
    description: URL da api de produção
  - url: http://staging-api.becommerce.com.br/v1
    description: Servidor usado para testes da API

  
tags: 
- name: Produtos
  description: (products) É a entidade que representa um produto do seller

paths:
  /products:
    get:
      tags: 
      - Produtos
      summary: Obtem uma lista de produtos do sistema
      security:
        - bearerAuth: []
      parameters: 
        - name: accountID
          description: Refere-se a conta usada na Becommerce, a identificação da Loja
          in: query
          required: true
          schema:
            type: string
            example: "TT620483"
        - name: status
          in: query
          description: Refere-se se o produto pedido esta ativo ou inativo
          schema:
            type: string
            example: "active | inactive | all"
        - name: tags
          in: query
          description: descrição da tag
          schema:
            type: string
            example: "Associação Automatica | Automático"
        - name: search
          in: query
          description: Pode ser enviado o Título, ID ou Código do SKU para buscar na lista
          schema:
            type: string
            example: "pneu | honda | celular"
      responses:
        '200':
          description: "Retorna uma lista de produtos cadastrados"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnathorizedRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableRequest'
        '500':
          $ref: '#/components/responses/ServiceError'
    post:
      tags: 
      - Produtos
      summary: Envia um objeto de um produto para ser gravado na base de dados
      security:
        - bearerAuth: []
      requestBody:
        description: Envia um objeto que representa um produto
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        '201':
          description: Retorno confirmando que o objeto foi criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnathorizedRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableRequest'
        '500':
          $ref: '#/components/responses/ServiceError'
      
  /products/{productID}:
    get:
      tags: 
      - Produtos
      summary: Pega o registro de um produto de acordo com o productID passado
      security:
        - bearerAuth: []
      parameters: 
        - name: productID
          description: É o identificador unico do produto (MELIID)
          in: path
          required: true
          schema:
            type: string
            example: "MLB1138005551"
      responses:
        '200':
          description: "Retorna o produto solicitado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnathorizedRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableRequest'
        '500':
          $ref: '#/components/responses/ServiceError'
    put:
      tags: 
      - Produtos
      summary: Realiza uma alteração em uma entidade ja existente
      security:
        - bearerAuth: []
      parameters: 
        - name: productID
          in: path
          required: true
          schema:
            type: string
            example: "MLB1138005551"
      requestBody:
        description: Envia um objeto que representa um produto com as alterações necessárias
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Products"
      responses:
        '200':
          description: Retorno confirmando que o objeto foi alterado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnathorizedRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableRequest'
        '500':
          $ref: '#/components/responses/ServiceError'
    delete:
      tags: 
      - Produtos
      summary: Remove um produto do sistema
      security:
        - bearerAuth: []
      parameters: 
      - name: productID
        description: Identificação unica do produto
        in: path
        required: true
        schema:
          type: string
          example: "MLB1138005551"
      responses:
        '204':
          description: Produto removido com sucesso
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnathorizedRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableRequest'
        '500':
          $ref: '#/components/responses/ServiceError'
 
          
components:
  schemas:
    Products:
      type: object
      description: >
        Modelo destinado ao retorno de produtos.
      properties:
        products:
           $ref: "#/components/schemas/Product"
        
    Product:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        sku:
          type: string
        title:
          type: string
        tags:
          type: string
        sellPrice:
          type: string
        costPrice:
          type: string
        checkoutRequest:
          type: string
        sendTypeProduct:
          type: string
        expeditionDetails:
          type: string
        hasVariation:
          type: boolean
        fiscalGroup:
          type: string
        comercialUnit:
          type: string
        cfop:
          $ref: "#/components/schemas/CFOP"
        ncm:
          $ref: "#/components/schemas/NCM"
        productOrigin:
          type: string
          enum:
          - "0 - Nacional - Exceto as indicadas nos códigos 3 a 5"
          - "1 - Estrangeira - Importação direta, exceto a indicada no cógio 6"
          example: "0 - Nacional - Exceto as indicadas nos códigos 3 a 5"
        ads:
          type: array
          items: 
            type: string
            example: ["MLB2313123", "MLB23123123"]
        variations:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariation"
        inventoryRule:
          type: string
          example: Padrão
        photos:
          type: array
          items:
            $ref: "#/components/schemas/Photo"
        freightInfo:
          $ref: "#/components/schemas/FreightInfo"
        stocks:
          type: "array"
          items:
            $ref: "#/components/schemas/Stocks"
        inventories:
          type: "array"
          items:
            $ref: "#/components/schemas/Inventories"  
          
    ProductVariation:
      type: object
      properties:
        id_sku:
          type: integer
        grid:
          type: "array"
          items:
            $ref: "#/components/schemas/DataVariation"
        
    DataVariation:
      type: object
      properties:
        nameVariation:
          type: string
          format: string
          example: "Cor"
        valueVariation:
          type: string
          format: string
          example: "preto"
        situationVariation: 
          type: string
          format: string
          example: "active"
    Photo:
      description: >
        É a foto do produto, ela pode ser colocada como principal ou não
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        isMainPhoto:
          type: boolean
          default: false
    CFOP:
      description: >
        Código Fiscal de Operações e Prestações, das entradas e saídas de mercadorias, intermunicipal e interestadual. Trata-se de um código numérico que identifica a natureza de circulação da mercadoria ou a prestação de serviço de transportes.
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
          example: 5350
        description:
          type: string
          example: PRESTAÇÕES DE SERVIÇOS DE TRANSPORTE
    NCM:
      description: >
        NCM significa "Nomenclatura Comum do Mercosul" e trata-se de um código de oito dígitos estabelecido pelo Governo Brasileiro para identificar a natureza das mercadorias e promover o desenvolvimento do comércio internacional, além de facilitar a coleta e análise das estatísticas do comércio exterior.
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
          example: 123052990
        description:
          type: string
          example: Outros serviços de assistência social
    FreightInfo:
      description: >
        São as informações de frete do produto, contém toda a informação necessária para um calculo de frete
      type: object
      properties:
        id:
          type: integer
        height:
          type: string
          example: cm 2.0
        width:
          type: string
          example: cm 2.0
        depth:
          type: string
          example: cm 16.0
        weight:
          type: string
          example: peso da carga
        timeHandling:
          type: string
          example: 2 
          description: Número em dias que será adicionado ao prazo calculado do frete.
        ownDelivery:
          type: boolean
          description: Define se este item possui a opção de entrega propria.
          default: false
        removal:
          type: boolean
        freightMode:
          type: string
          enum:
            - "Correios"
            - "Tabela Personalizada"
            - "Mercado Envios"
        freightTableID:
          type: integer
          description: Tabela personalizada por grupo de estados, para gerenciar as tabelas da conta, acesse 'Tabelas de Frete > Gerenciamento
        additionalUnity:
          type: string
          description:
            Define a regra de calculo de frete para mais de uma unidade deste mesmo produto.
        freeNormal:
          type: boolean
        freeExpress:
          type: boolean
        expressAdditionalValue:
          type: number
        expressAdditionalPercent:
          type: string
        normalAdditionalValue:
          type: number
        normalAdditionalPercent:
          type: string
    Stocks: 
      description: >
        Metodo destinado para mostrar os itens que estao dentro do inventario.
      type: object
      required:
        - id_sku
        - quantity
      properties:
        id_sku:
          type: string
          format: string
          example: 'SKU-12374'
        quantity:
          type: integer
          example: 12
    Inventories:
      type: object
      description: >
        Metodo destinado para consulta de inventarios da Bec.
      required:
        - id
        - blockMovement
        - SituationInvetorie  
      properties:
        Id:
          type: string
          format: uuid
          example: '3fa85f64-5717-4562-b3fc-2c963f66afa6'
        externalLocator:  
          type: string
          format: string
          example: 'INV-12374'
        blockMovement:
          type: boolean
          format: boolean
          example: true
        SituationInvetorie:
          type: string
          format: String
          enum:
          - 'Aberto'
          - 'Processado'
          - 'Cancelado'
          example: 'Aberto'
        Note:
          type: string
          format: String
          example: 'Inventario para organizacao da operacao' 

          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BadRequest:
      description: >-
        The request contains headers, query params or body attributes empty that
        are required.
      content:
        text/plain:
          schema:
            type: string
    UnathorizedRequest:
      description: The access token is missing or invalid.
      content:
        text/plain:
          schema:
            type: string
    NotFound:
      description: Resource not found.
      content:
        text/plain:
          schema:
            type: string
    BadContentTypeRequest:
      description: The request contains invalid Content Type.
      content:
        text/plain:
          schema:
            type: string
    AppUpdate:
      description: The mobile application must be updated.
      content:
        text/plain:
          schema:
            type: string
    UnprocessableRequest:
      description: >-
        The request contains headers, query params or body attributes with
        invalid values.
      content:
        text/plain:
          schema:
            type: string
    ServiceError:
      description: >-
        An error ocurred in the service. Please include the trace identifier in
        your report.
      content:
        text/plain:
          schema:
            type: string
    NotImplemented:
      description: Unsupported functionality.
      content:
        text/plain:
          schema:
            type: string
    BadGateway:
      description: >-
        An error ocurred in one of the upstreams services, the body contains the
        description.
      content:
        text/plain:
          schema:
            type: string
      headers:
        X-Upstream-Code:
          description: Error code from the upstream services.
          schema:
            type: string
